input {
	beats {
		port => "5044"
	}
}

filter {
	grok {
		patterns_dir => ["/Users/jakub.izbicki/Projects/monitoring/elastic/logstash/patterns"]
		match => { "message" => "%{TAG} serviceName: \[%{SERVICE_NAME:serviceName}\] type: \[%{TYPE:type}\] contextPath: \[%{CONTEXT_PATH:contextPath}\] correlationId: \[%{CORRELATION_ID:correlationId}\] method: \[%{METHOD:method}\] timestamp: \[%{TIMESTAMP:timestamp}\] responseTime: \[%{RESPONSE_TIME:responseTime}\] responseCode: \[%{RESPONSE_CODE:responseCode}\] body: \[%{BODY:body}\]" }
		remove_field => [ "ecs", "message", "@version", "log", "tags", "@timestamp", "host", "agent", "input" ]
	}

	date {
		match => [ "timestamp", "UNIX_MS" ]
		target => "timestamp"
    }

	if "_grokparsefailure" in [tags] {
		drop { }
	}
}

output {
	stdout { codec => rubydebug }

	elasticsearch {
        hosts => [ "localhost:9200" ]
        index => "services"
    }
}